#ifndef _PSIMAX_GFX_H
#define _PSIMAX_GFX_H

/*

https://code.google.com/p/u8glib/


// EXAMPLE

// pins
// OLED Display
#define OLED_MOSI  1
#define OLED_CLK   2
#define OLED_DC    4
#define OLED_CS    3
#define OLED_RESET 5

// driver
U8GLIB_SSD1306_128X64 display(OLED_CLK, OLED_MOSI, OLED_CS, OLED_DC, OLED_RESET);

// setup
display.setFont(u8g_font_profont12);
display.setFontPosTop();

// Gauges, use 10 bytes of memory Each
pgfx_HBAR fbar = pgfx_HBAR( 0, 0,20,64,"FUEL",display, 7);
pgfx_HBAR mbar = pgfx_HBAR(26, 0,20,64,"MONO",display, 7);
pgfx_HBAR ebar = pgfx_HBAR(52, 0,20,64,"ELEC",display, 7);
pgfx_HBAR gbar = pgfx_HBAR(78, 0,20,64,"G's",display, 7);

// single bargraphs
fbar.update(VData.LiquidFuelS, VData.LiquidFuelTotS, VData.LiquidFuel, VData.LiquidFuelTot);
mbar.update(VData.MonoProp, VData.MonoPropTot);
ebar.update(VData.ECharge, VData.EChargeTot);
gbar.update(VData.G, 15);



*/

#include <U8glib.h>


// common stubs for all hud elements
class pgfx {
public:
  // methods
  virtual void update(int value){};
  virtual void update(float value){};
  virtual void update(float value, float max, char name[4]){};
  virtual void update(float v1, float m1, float v2, float m2, char name[4]){};
  inline void init(uint8_t x, uint8_t y, uint8_t w, uint8_t h, U8GLIB_SSD1306_128X64 &display) {
    _x = (uint8_t)x;
    _y = (uint8_t)y;
    _width = (uint8_t)w;
    _height = (uint8_t)h;
    _display = &display;
  }

protected:
  // vars
  uint8_t _width, _height, _x, _y, _spkr_pin;
  U8GLIB_SSD1306_128X64 * _display;
};


class pgfx_HBAR  : public pgfx  {
public:

  inline pgfx_HBAR(int x, int y, int w, int h, char * name, U8GLIB_SSD1306_128X64 &display, int spkr_pin)
  {
    pgfx::init(x, y, w, h, display);
    _name = name;
    _spkr_pin = spkr_pin;
  }

  void
  update(float value, float max, char name[4]),
  update(float v1, float m1, float v2, float m2, char name[4]);

protected:
  char * _name;
};

//class pgfx_BUTTON  : public pgfx {
//
//public:
//  inline pgfx_BUTTON(int x, int y, int w, int h, char * name, U8GLIB_SSD1306_128X64 &display, int spkr_pin)
//  {
//    pgfx::init(x, y, w, h, display);
//    _name = name;
//    _spkr_pin = spkr_pin;
//  }
//
//protected:
//  char * _name;
//
//};



//#define logo_width 128
//#define logo_height 64
//static unsigned char logo_bits[] U8G_PROGMEM = {
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x03,
//	0x00, 0x00, 0x00, 0xe0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0xe6, 0x00, 0x03, 0x00, 0x00, 0x00, 0x30, 0x06, 0x00, 0x08, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
//	0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc6, 0x3c, 0xb3,
//	0x19, 0x1e, 0x33, 0x70, 0x30, 0xf6, 0x9e, 0xc7, 0x66, 0x3c, 0x00, 0x00,
//	0x00, 0xe6, 0x66, 0x73, 0x37, 0x31, 0x33, 0xe0, 0x31, 0x9e, 0xcd, 0xcc,
//	0xdd, 0x66, 0x00, 0x00, 0x00, 0x7e, 0x0e, 0x33, 0x33, 0x3c, 0x1e, 0xc0,
//	0x63, 0x3b, 0xcc, 0xcc, 0xcc, 0x0e, 0x00, 0x00, 0x00, 0x06, 0x3c, 0x33,
//	0x33, 0x36, 0x1c, 0x00, 0x67, 0xf3, 0xcc, 0xcf, 0xcc, 0x3c, 0x00, 0x00,
//	0x00, 0x06, 0x70, 0x33, 0x33, 0x33, 0x1e, 0x00, 0xe6, 0xc3, 0xcd, 0xc0,
//	0xcc, 0x70, 0x00, 0x00, 0x00, 0x06, 0x66, 0x33, 0x33, 0x33, 0x33, 0x30,
//	0xc6, 0x99, 0xcd, 0xcc, 0xcc, 0x66, 0x00, 0x00, 0x00, 0x06, 0x3c, 0x33,
//	0x33, 0x3e, 0x33, 0xe0, 0xc3, 0xf1, 0x98, 0xc7, 0xcc, 0x3c, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x01, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x06, 0x06, 0x00, 0x60, 0x60, 0x80, 0x0f, 0x00, 0xc0, 0x0c, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x06, 0x00, 0x60, 0x60, 0xc0, 0x18,
//	0x00, 0xc0, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00,
//	0x00, 0x60, 0x60, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x06, 0xc6, 0x66, 0x66, 0x6c, 0x60, 0x80, 0x87, 0xc7, 0xcc, 0x86,
//	0x0d, 0x00, 0x00, 0x00, 0x00, 0x06, 0x66, 0x67, 0x66, 0x76, 0x60, 0x80,
//	0x84, 0xc4, 0xcc, 0xcc, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x06, 0x66, 0x66,
//	0x66, 0x66, 0x60, 0xc0, 0xcc, 0xcc, 0xcc, 0xcc, 0x0c, 0x00, 0x00, 0x00,
//	0x00, 0x06, 0x66, 0x66, 0x66, 0x66, 0x60, 0xc0, 0xcc, 0xcc, 0xcc, 0xcc,
//	0x0c, 0x00, 0x00, 0x00, 0x00, 0x06, 0x66, 0x66, 0x66, 0x66, 0x60, 0xc0,
//	0xcc, 0xcc, 0xcc, 0xcc, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x06, 0x66, 0x67,
//	0x67, 0x76, 0xc0, 0xd8, 0xc4, 0xc4, 0xcc, 0xcc, 0x0e, 0x00, 0x00, 0x00,
//	0x00, 0x7e, 0xc6, 0xc6, 0x66, 0x6c, 0x80, 0x8f, 0x83, 0xc3, 0xcc, 0x8c,
//	0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x0c, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
//	0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x80, 0x0f, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00,
//	0x80, 0x07, 0x30, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x18, 0x00, 0x80, 0x00,
//	0x80, 0x01, 0x00, 0x00, 0xc0, 0x0c, 0x38, 0x00, 0x00, 0x00, 0x00, 0x60,
//	0x00, 0x00, 0xc0, 0x00, 0x80, 0x01, 0x00, 0x00, 0xc0, 0x0c, 0x3c, 0x00,
//	0x00, 0x00, 0x00, 0x60, 0x80, 0xc7, 0xe6, 0x3d, 0x8f, 0xf1, 0x78, 0x80,
//	0xf1, 0x0c, 0x34, 0x00, 0x00, 0x00, 0x00, 0x60, 0x80, 0xc4, 0xcc, 0x0c,
//	0x89, 0x99, 0x19, 0x80, 0xf1, 0x0c, 0x30, 0x00, 0x00, 0x00, 0x00, 0x60,
//	0xc0, 0xcc, 0xcc, 0x8c, 0x99, 0x99, 0x19, 0x00, 0xdb, 0x0c, 0x30, 0x00,
//	0x00, 0x00, 0x00, 0x60, 0xc0, 0xcc, 0xcc, 0x8c, 0x99, 0xf9, 0x19, 0x00,
//	0xdb, 0x0c, 0x30, 0x00, 0x00, 0x00, 0x00, 0x60, 0xc0, 0xcc, 0xcc, 0x8c,
//	0x99, 0x19, 0x18, 0x00, 0xdf, 0x0c, 0x30, 0x00, 0x00, 0x00, 0x00, 0xc0,
//	0xd8, 0xc4, 0xcc, 0x8c, 0x89, 0x99, 0x19, 0x00, 0xce, 0xcc, 0x30, 0x00,
//	0x00, 0x00, 0x00, 0x80, 0x8f, 0xc3, 0x8c, 0x0d, 0x87, 0xf1, 0x18, 0x00,
//	0x8e, 0xc7, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
//	0x00, 0x00, 0x00, 0x00 };


#endif
